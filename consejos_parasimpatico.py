# consejos_parasimpatico.py
# Pr√°cticas breves para activar el sistema parasimp√°tico (anti-estr√©s).
# No requiere dependencias. √ösalo desde tu bot para proponer ejercicios guiados.

from __future__ import annotations
from typing import List, Dict, Any, Optional
import random

# Cada consejo es un dict con:
# id, nombre, dur_min, momento, contexto, pasos[list[str]], nota_seguridad[str|None], evidencia[str|None]
CONSEJOS_PARASIMPATICO: List[Dict[str, Any]] = [

    {
        "id": "resp_4_6",
        "nombre": "Respiraci√≥n 4-6 (coherencia card√≠aca)",
        "dur_min": 3,
        "momento": "cualquiera",
        "contexto": "oficina",
        "pasos": [
            "Si√©ntate c√≥modo, hombros sueltos.",
            "Inhala por la nariz durante 4 segundos.",
            "Exhala lenta y completamente por la nariz o la boca durante 6 segundos.",
            "Repite el ciclo de 4-6 durante 3‚Äì5 minutos manteniendo una respiraci√≥n silenciosa.",
        ],
        "nota_seguridad": "Si mareas, reduce el tiempo de exhalaci√≥n a 5s y respira con suavidad.",
        "evidencia": "Coherence breathing 6 ciclos/min ‚Üí ‚Üëvariabilidad card√≠aca (HRV) y calma auton√≥mica."
    },

    {
        "id": "resp_caja",
        "nombre": "Respiraci√≥n en caja 4-4-4-4",
        "dur_min": 2,
        "momento": "cualquiera",
        "contexto": "oficina",
        "pasos": [
            "Inhala 4 segundos.",
            "Ret√©n 4 segundos (suave, sin tensi√≥n).",
            "Exhala 4 segundos.",
            "Ret√©n con pulmones vac√≠os 4 segundos.",
            "Repite 2‚Äì4 minutos.",
        ],
        "nota_seguridad": "Evita retenciones largas si est√°s embarazada o con problemas respiratorios.",
        "evidencia": "T√©cnica de control respiratorio que modula el tono vagal."
    },

    {
        "id": "suspiros_fisiologicos",
        "nombre": "2 Suspiros fisiol√≥gicos + exhalaci√≥n larga",
        "dur_min": 1,
        "momento": "pico_estr√©s",
        "contexto": "cualquiera",
        "pasos": [
            "Inhala por la nariz hasta ~80% de tus pulmones.",
            "Haz una mini-inhala breve adicional por la nariz para 'llenar' la parte alta.",
            "Exhala larga y progresiva por la boca.",
            "Haz 3‚Äì5 repeticiones. Notar√°s alivio r√°pido de la tensi√≥n.",
        ],
        "nota_seguridad": None,
        "evidencia": "El 'physiological sigh' reduce CO‚ÇÇ y activa reflejos calmantes."
    },

    {
        "id": "relaj_muscular",
        "nombre": "Relajaci√≥n muscular progresiva (mano-hombros-cara)",
        "dur_min": 4,
        "momento": "tarde",
        "contexto": "oficina",
        "pasos": [
            "Aprieta pu√±os 5 segundos y suelta 10; siente la diferencia.",
            "Eleva hombros 5 segundos y suelta 10.",
            "Frunce la cara con suavidad 5 segundos y suelta 10.",
            "Repite el ciclo completo 2 veces.",
        ],
        "nota_seguridad": "Evita contracciones dolorosas si tienes lesi√≥n.",
        "evidencia": "PMR (Jacobson) reduce activaci√≥n simp√°tica y ansiedad som√°tica."
    },

    {
        "id": "zumbido_vagal",
        "nombre": "Zumbido/Hum para el nervio vago",
        "dur_min": 2,
        "momento": "cualquiera",
        "contexto": "casa",
        "pasos": [
            "Inhala por la nariz.",
            "Exhala emitiendo un zumbido suave 'mmmm' o 'om' que vibre en garganta y rostro.",
            "Mant√©nlo 6‚Äì8 s; repite 8‚Äì10 veces.",
        ],
        "nota_seguridad": "Bajo volumen si est√°s en la oficina üòâ.",
        "evidencia": "Vibraci√≥n lar√≠ngea y exhalaci√≥n prolongada ‚Üí ‚Üëtono vagal."
    },

    {
        "id": "agua_fresca_cara",
        "nombre": "Reflejo de inmersi√≥n: agua fresca en la cara",
        "dur_min": 1,
        "momento": "pico_estr√©s",
        "contexto": "ba√±o",
        "pasos": [
            "Moja cara con agua fresca 10‚Äì20¬∞C o aplica compresa fr√≠a en mejillas y zona bajo ojos.",
            "Respira lento por la nariz 1‚Äì2 minutos.",
        ],
        "nota_seguridad": "Evita fr√≠o extremo si tienes problemas card√≠acos o migra√±as desencadenadas por fr√≠o.",
        "evidencia": "Reflejo trig√©mino ‚Üí bradicardia suave y activaci√≥n parasimp√°tica."
    },

    {
        "id": "body_scan_2m",
        "nombre": "Body-scan de 2 minutos",
        "dur_min": 2,
        "momento": "noche",
        "contexto": "cama",
        "pasos": [
            "Cierra los ojos y recorre el cuerpo de pies a cabeza.",
            "En cada zona, inspira 3 s y al exhalar suelta la tensi√≥n.",
            "Si aparecen pensamientos, vuelve amable al cuerpo.",
        ],
        "nota_seguridad": None,
        "evidencia": "Atenci√≥n interoceptiva reduce rumiaci√≥n y baja arousal."
    },

    {
        "id": "gratitud_3",
        "nombre": "3 cosas buenas (gratitud breve)",
        "dur_min": 2,
        "momento": "noche",
        "contexto": "cama",
        "pasos": [
            "Piensa o escribe 3 cosas que salieron bien hoy y por qu√©.",
            "Respira 4-6 mientras evocarlas 30‚Äì60 s cada una.",
        ],
        "nota_seguridad": None,
        "evidencia": "Pr√°cticas de gratitud mejoran afecto positivo y sue√±o."
    },

    {
        "id": "estir_gato_camel",
        "nombre": "Estiramiento suave (gato-camello)",
        "dur_min": 3,
        "momento": "ma√±ana",
        "contexto": "casa",
        "pasos": [
            "A cuatro apoyos, arquea espalda (gato) al exhalar.",
            "Inhala y baja el abdomen (camello).",
            "Ritmo 5‚Äì6 ciclos/min durante 2‚Äì3 minutos.",
        ],
        "nota_seguridad": "Evita si hay dolor lumbar agudo; mueve con suavidad.",
        "evidencia": "Movimiento respirado + ritmo lento ‚Üí ‚Üëtono parasimp√°tico."
    },

    {
        "id": "pausa_360",
        "nombre": "Pausa 360¬∫ (vista amplia + respiraci√≥n nasal)",
        "dur_min": 1,
        "momento": "oficina",
        "contexto": "oficina",
        "pasos": [
            "Levanta la mirada de la pantalla y suaviza el enfoque (visi√≥n panor√°mica).",
            "Respira por la nariz 6 ciclos lentos mientras mantienes el campo visual amplio.",
        ],
        "nota_seguridad": None,
        "evidencia": "Visi√≥n perif√©rica reduce foco de amenaza y activa redes calmantes."
    },
]

# -------- Helpers de selecci√≥n y formato --------

def _match(c: Dict[str, Any], momento: Optional[str], contexto: Optional[str], max_min: Optional[int]) -> bool:
    if momento and c["momento"] not in (momento, "cualquiera", "oficina"):
        return False
    if contexto and c["contexto"] not in (contexto, "cualquiera"):
        return False
    if max_min is not None and c["dur_min"] > max_min:
        return False
    return True

def consejo_aleatorio(filtro: Optional[Dict[str, Any]] = None) -> Dict[str, Any]:
    """
    filtro opcional: {"momento": "noche|tarde|ma√±ana|pico_estr√©s|oficina",
                      "contexto": "oficina|casa|ba√±o|cama|cualquiera",
                      "max_min": 3}
    """
    if filtro is None:
        return random.choice(CONSEJOS_PARASIMPATICO)
    momento = filtro.get("momento")
    contexto = filtro.get("contexto")
    max_min = filtro.get("max_min")
    cand = [c for c in CONSEJOS_PARASIMPATICO if _match(c, momento, contexto, max_min)]
    return random.choice(cand) if cand else random.choice(CONSEJOS_PARASIMPATICO)

def sugerir_por_tiempo(minutos: int, contexto: Optional[str] = None) -> Dict[str, Any]:
    cand = [c for c in CONSEJOS_PARASIMPATICO if c["dur_min"] <= minutos and (not contexto or c["contexto"] in (contexto, "cualquiera"))]
    return random.choice(cand) if cand else consejo_aleatorio()

def sugerir_para_noche() -> Dict[str, Any]:
    cand = [c for c in CONSEJOS_PARASIMPATICO if c["momento"] == "noche"]
    return random.choice(cand) if cand else consejo_aleatorio()

def sugerir_en_oficina(max_min: int = 3) -> Dict[str, Any]:
    cand = [c for c in CONSEJOS_PARASIMPATICO if c["contexto"] == "oficina" and c["dur_min"] <= max_min]
    return random.choice(cand) if cand else consejo_aleatorio({"contexto": "oficina"})

def formatear_consejo(c: Dict[str, Any]) -> str:
    pasos_txt = "\n".join([f"{i+1}. {p}" for i, p in enumerate(c["pasos"])])
    nota = f"\n\n‚ÑπÔ∏è {c['nota_seguridad']}" if c.get("nota_seguridad") else ""
    evid = f"\n\nüìö {c['evidencia']}" if c.get("evidencia") else ""
    return (
        f"üßò {c['nombre']} ¬∑ {c['dur_min']} min\n"
        f"{pasos_txt}"
        f"{nota}{evid}"
    )

# -------- Ejemplos de uso r√°pido --------
# consejo = consejo_aleatorio({"max_min": 2, "contexto": "oficina"})
# print(formatear_consejo(consejo))
#
# consejo = sugerir_para_noche()
# print(formatear_consejo(consejo))
#
# consejo = sugerir_por_tiempo(1)
# print(formatear_consejo(consejo))